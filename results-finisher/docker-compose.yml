version: '3.8'

services:
  # ... (rabbitmq, results_router, and other services are unchanged) ...
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: coffee_rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - coffee_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  results_router:
    build: .
    container_name: results_router
    command: python results_router.py
    depends_on:
      rabbitmq: { condition: service_healthy }
    networks:
      - coffee_network
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - INPUT_QUEUE=results_router_input_queue
      - OUTPUT_QUEUES=results_finisher_queue_1,results_finisher_queue_2

  results_finisher_1:
    build: .
    container_name: results_finisher_1
    command: python results_finisher_runner.py
    depends_on:
      - rabbitmq
    networks:
      - coffee_network
    volumes:
      - finisher_checkpoints_1:/checkpoints
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - INPUT_QUEUE=results_finisher_queue_1
      - OUTPUT_QUEUE=orchestrator_results_queue
      - CHECKPOINT_DIR=/checkpoints

  results_finisher_2:
    build: .
    container_name: results_finisher_2
    command: python results_finisher_runner.py
    depends_on:
      - rabbitmq
    networks:
      - coffee_network
    volumes:
      - finisher_checkpoints_2:/checkpoints
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - INPUT_QUEUE=results_finisher_queue_2
      - OUTPUT_QUEUE=orchestrator_results_queue
      - CHECKPOINT_DIR=/checkpoints

  # Test versions of services with test queue configuration
  test_results_router:
    build: .
    container_name: test_results_router
    profiles: ["test"]
    command: python results_router.py
    depends_on:
      rabbitmq: { condition: service_healthy }
    networks:
      - coffee_network
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - INPUT_QUEUE=test_router_in
      - OUTPUT_QUEUES=test_finisher_in_1,test_finisher_in_2

  test_results_finisher_1:
    build: .
    container_name: test_results_finisher_1
    profiles: ["test"]
    command: python results_finisher_runner.py
    depends_on:
      rabbitmq: { condition: service_healthy }
    networks:
      - coffee_network
    volumes:
      - test_finisher_checkpoints_1:/checkpoints
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - INPUT_QUEUE=test_finisher_in_1
      - OUTPUT_QUEUE=test_orchestrator_out
      - CHECKPOINT_DIR=/checkpoints

  test_results_finisher_2:
    build: .
    container_name: test_results_finisher_2
    profiles: ["test"]
    command: python results_finisher_runner.py
    depends_on:
      rabbitmq: { condition: service_healthy }
    networks:
      - coffee_network
    volumes:
      - test_finisher_checkpoints_2:/checkpoints
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - INPUT_QUEUE=test_finisher_in_2
      - OUTPUT_QUEUE=test_orchestrator_out
      - CHECKPOINT_DIR=/checkpoints

  test_runner:
    build: .
    profiles: ["test"]
    depends_on:
      rabbitmq: { condition: service_healthy }
      test_results_router: { condition: service_started }
      test_results_finisher_1: { condition: service_started }
      test_results_finisher_2: { condition: service_started }
    networks:
      - coffee_network
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - ROUTER_INPUT_QUEUE=test_router_in
      - FINISHER_OUTPUT_QUEUE=test_orchestrator_out
      - FINISHER_INPUT_QUEUES=test_finisher_in_1,test_finisher_in_2
    command: ["pytest", "-v", "-s", "/app/run_test.py"]

# ... (networks and volumes are unchanged)
networks:
  coffee_network:
    driver: bridge

volumes:
  finisher_checkpoints_1:
  finisher_checkpoints_2:
  test_finisher_checkpoints_1:
  test_finisher_checkpoints_2: