version: '3.8'
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - testing_net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  orchestrator:
    container_name: orchestrator
    build:
      context: .
      dockerfile: orchestrator/Dockerfile
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - CLIENTS_AMOUNT=1
      # - LOGGING_LEVEL=DEBUG
    networks:
      - testing_net
    volumes:
      - ./orchestrator/config.ini:/app/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy

  client1:
    container_name: client1
    build:
      context: .
      dockerfile: client/Dockerfile
    entrypoint: /client
    environment:
      - CLI_ID=1
      # - CLI_LOG_LEVEL=DEBUG
    networks:
      - testing_net
    depends_on:
      - orchestrator
    volumes:
      - ./client/config.yaml:/config.yaml:ro
      - ./.data:/data:ro
  
  aggregator1:
    container_name: aggregator1
    build:
      context: .
      dockerfile: aggregator/Dockerfile
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - AGGREGATOR_ID=00
      # - LOGGING_LEVEL=DEBUG
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./aggregator/config.ini:/app/config.ini:ro

networks:
  testing_net:
    ipam:
      driver: default
      config:
        - subnet: 172.25.125.0/24