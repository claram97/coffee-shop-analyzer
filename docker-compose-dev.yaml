version: '3.8'
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=/
    networks:
      - testing_net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  orchestrator:
    container_name: orchestrator
    build:
      context: .
      dockerfile: orchestrator/Dockerfile
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - CLIENTS_AMOUNT=1
    networks:
      - testing_net
    volumes:
      - ./orchestrator/config.ini:/app/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy

  client1:
    container_name: client1
    build:
      context: .
      dockerfile: client/Dockerfile
    entrypoint: /client
    environment:
      - CLI_ID=1
    networks:
      - testing_net
    depends_on:
      - orchestrator
    volumes:
      - ./client/config.yaml:/config.yaml:ro
      - ./.data:/data:ro

  filter-router:
    container_name: filter-router
    build:
      context: .
      dockerfile: filter/Dockerfile.router
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - LOG_LEVEL=INFO
      - CONFIG_PATH=/config/config.ini
    networks:
      - testing_net
    volumes:
      - ./app_config/config.ini:/config/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy

  filter-worker-0:
    container_name: filter-worker-0
    build:
      context: .
      dockerfile: filter/Dockerfile.worker
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - LOG_LEVEL=INFO
      - CONFIG_PATH=/config/config.ini
    networks:
      - testing_net
    volumes:
      - ./app_config/config.ini:/config/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter-router:
        condition: service_started

  filter-worker-1:
    container_name: filter-worker-1
    build:
      context: .
      dockerfile: filter/Dockerfile.worker
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - LOG_LEVEL=INFO
      - CONFIG_PATH=/config/config.ini
    networks:
      - testing_net
    volumes:
      - ./app_config/config.ini:/config/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter-router:
        condition: service_started

  filter-worker-2:
    container_name: filter-worker-2
    build:
      context: .
      dockerfile: filter/Dockerfile.worker
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - LOG_LEVEL=INFO
      - CONFIG_PATH=/config/config.ini
    networks:
      - testing_net
    volumes:
      - ./app_config/config.ini:/config/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter-router:
        condition: service_started

  filter-worker-3:
    container_name: filter-worker-3
    build:
      context: .
      dockerfile: filter/Dockerfile.worker
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - LOG_LEVEL=INFO
      - CONFIG_PATH=/config/config.ini
    networks:
      - testing_net
    volumes:
      - ./app_config/config.ini:/config/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter-router:
        condition: service_started

  filter-worker-4:
    container_name: filter-worker-4
    build:
      context: .
      dockerfile: filter/Dockerfile.worker
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - LOG_LEVEL=INFO
      - CONFIG_PATH=/config/config.ini
    networks:
      - testing_net
    volumes:
      - ./app_config/config.ini:/config/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter-router:
        condition: service_started

  aggregator-0:
    container_name: aggregator-0
    build:
      context: .
      dockerfile: aggregator/Dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - CONFIG_PATH=/config/config.ini
      - LOG_LEVEL=INFO
      - AGGREGATOR_ID=0
    networks:
      - testing_net
    volumes:
      - ./app_config/config.ini:/config/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter-router:
        condition: service_started

  aggregator-1:
    container_name: aggregator-1
    build:
      context: .
      dockerfile: aggregator/Dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - CONFIG_PATH=/config/config.ini
      - LOG_LEVEL=INFO
      - AGGREGATOR_ID=1
    networks:
      - testing_net
    volumes:
      - ./app_config/config.ini:/config/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter-router:
        condition: service_started

  aggregator-2:
    container_name: aggregator-2
    build:
      context: .
      dockerfile: aggregator/Dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - CONFIG_PATH=/config/config.ini
      - LOG_LEVEL=INFO
      - AGGREGATOR_ID=2
    networks:
      - testing_net
    volumes:
      - ./app_config/config.ini:/config/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter-router:
        condition: service_started

  aggregator-3:
    container_name: aggregator-3
    build:
      context: .
      dockerfile: aggregator/Dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - CONFIG_PATH=/config/config.ini
      - LOG_LEVEL=INFO
      - AGGREGATOR_ID=3
    networks:
      - testing_net
    volumes:
      - ./app_config/config.ini:/config/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter-router:
        condition: service_started

  aggregator-4:
    container_name: aggregator-4
    build:
      context: .
      dockerfile: aggregator/Dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - CONFIG_PATH=/config/config.ini
      - LOG_LEVEL=INFO
      - AGGREGATOR_ID=4
    networks:
      - testing_net
    volumes:
      - ./app_config/config.ini:/config/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter-router:
        condition: service_started

  joiner-router:
    container_name: joiner-router
    build:
      context: .
      dockerfile: joiner/Dockerfile.router
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - CONFIG_PATH=/config/config.ini
    networks:
      - testing_net
    volumes:
      - ./app_config/config.ini:/config/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      aggregator-1:
        condition: service_started

  joiner-worker-0:
    container_name: joiner-worker-0
    build:
      context: .
      dockerfile: joiner/Dockerfile.worker
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - JOINER_WORKER_INDEX=0
      - CONFIG_PATH=/config/config.ini
    networks:
      - testing_net
    volumes:
      - ./app_config/config.ini:/config/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      joiner-router:
        condition: service_started

  joiner-worker-1:
    container_name: joiner-worker-1
    build:
      context: .
      dockerfile: joiner/Dockerfile.worker
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - JOINER_WORKER_INDEX=1
      - CONFIG_PATH=/config/config.ini
    networks:
      - testing_net
    volumes:
      - ./app_config/config.ini:/config/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      joiner-router:
        condition: service_started

  joiner-worker-2:
    container_name: joiner-worker-2
    build:
      context: .
      dockerfile: joiner/Dockerfile.worker
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - JOINER_WORKER_INDEX=2
      - CONFIG_PATH=/config/config.ini
    networks:
      - testing_net
    volumes:
      - ./app_config/config.ini:/config/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      joiner-router:
        condition: service_started

  joiner-worker-3:
    container_name: joiner-worker-3
    build:
      context: .
      dockerfile: joiner/Dockerfile.worker
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - JOINER_WORKER_INDEX=3
      - CONFIG_PATH=/config/config.ini
    networks:
      - testing_net
    volumes:
      - ./app_config/config.ini:/config/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      joiner-router:
        condition: service_started

  joiner-worker-4:
    container_name: joiner-worker-4
    build:
      context: .
      dockerfile: joiner/Dockerfile.worker
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - JOINER_WORKER_INDEX=4
      - CONFIG_PATH=/config/config.ini
    networks:
      - testing_net
    volumes:
      - ./app_config/config.ini:/config/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      joiner-router:
        condition: service_started

  results-router:
    container_name: results-router
    build:
      context: .
      dockerfile: results-finisher/Dockerfile.router
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - LOG_LEVEL=INFO
      - INPUT_QUEUE=results.controller.in
      - OUTPUT_QUEUES=finisher_input_queue_1,finisher_input_queue_2
    networks:
      - testing_net
    volumes:
      - ./results-finisher:/app/results-finisher:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      joiner-router:
        condition: service_started

  results-finisher-1:
    container_name: results-finisher-1
    build:
      context: .
      dockerfile: results-finisher/Dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - LOG_LEVEL=INFO
      - STRATEGY_MODE=append_only  # Can be 'append_only' or 'incremental'
      - INPUT_QUEUE=finisher_input_queue_1
      - OUTPUT_QUEUE=orchestrator_results_queue
    networks:
      - testing_net
    volumes:
      - ./results-finisher:/app/results-finisher:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      results-router:
        condition: service_started

  results-finisher-2:
    container_name: results-finisher-2
    build:
      context: .
      dockerfile: results-finisher/Dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - LOG_LEVEL=INFO
      - STRATEGY_MODE=append_only  # Can be 'append_only' or 'incremental'
      - INPUT_QUEUE=finisher_input_queue_2
      - OUTPUT_QUEUE=orchestrator_results_queue
    networks:
      - testing_net
    volumes:
      - ./results-finisher:/app/results-finisher:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
      results-router:
        condition: service_started

networks:
  testing_net:
    ipam:
      driver: default
      config:
        - subnet: 172.25.125.0/24
