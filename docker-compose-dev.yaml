version: '3.8'
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - testing_net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  orchestrator:
    container_name: orchestrator
    build:
      context: .
      dockerfile: orchestrator/Dockerfile
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - CLIENTS_AMOUNT=1
      # - LOGGING_LEVEL=DEBUG
    networks:
      - testing_net
    volumes:
      - ./orchestrator/config.ini:/app/config.ini:ro
    depends_on:
      rabbitmq:
        condition: service_healthy

  client1:
    container_name: client1
    build:
      context: .
      dockerfile: client/Dockerfile
    entrypoint: /client
    environment:
      - CLI_ID=1
      # - CLI_LOG_LEVEL=DEBUG
    networks:
      - testing_net
    depends_on:
      - orchestrator
    volumes:
      - ./client/config.yaml:/config.yaml:ro
      - ./.data:/data:ro

  filter-router:
    container_name: filter-router
    build:
      context: .
      dockerfile: filter/Dockerfile.router
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - ROUTER_INPUT_QUEUE=filter_router_queue
      - FILTERS_POOL_QUEUE=filters.pool
      - AGG_QUEUE_FORMAT=agg.{table}.p{pid}
      - TRANSACTIONS_PARTITIONS=3
      - USERS_PARTITIONS=3
      - TRANSACTION_ITEMS_PARTITIONS=3
      - LOG_LEVEL=INFO
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy

  filter-worker1:
    container_name: filter-worker1
    build:
      context: .
      dockerfile: filter/Dockerfile.worker
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTERS_POOL_QUEUE=filters.pool
      - ROUTER_OUTPUT_QUEUE=filter_router_queue
      - LOG_LEVEL=INFO
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter-router:
        condition: service_started

networks:
  testing_net:
    ipam:
      driver: default
      config:
        - subnet: 172.25.125.0/24